
====== java后台代码 ======

1、组件刷新
  JSFUtils.refresh(bjxbTable);//例如 bjxbTable 为组件 table 的ID 
  JSFUtils.refresh(JSFUtils.findComponentInRoot("ot68"));//教学班总人数，刷新属性
  
2、服务器信息返回
  Noty.success(ErrorStringKey.ADD_SCUUESS);//返回成功信息
  Noty.error(ErrorStringKey.ADD_ERROR);//返回失败信息
  JSFUtils.addFacesInformationMessage(reMsg);//返回服务器信息
  
3、获取页面返回的多行信息
  List<Row> rows = new ArrayList<Row>();
  rows = ADFUtils.getTableSelectedRows(this.getCxTable());

4、代码筛选过滤
  1)、JxjhglXsjbxxVoImpl 该类需要设置绑定变量的set和get方法，生成java类时自动生成
  2)、对应vo需要添加绑定变量,与sql中的相对应
  3)、vo中的绑定变量controller Hit属性设置为不可见
  4)、代码如下：
    public void filterStudentList(ItemEvent itemEvent) {
        try {
            DCIteratorBinding dc =
                ADFUtils.findIterator("Jxjhgl_xsjbxxVo1Iterator"); //页面绑定迭代器
            String kkxn = (String)ADFUtils.getBoundAttributeValue("Kckkxn");
            String jxbh = (String)ADFUtils.getBoundAttributeValue("Jxbh");
            JxjhglXsjbxxVoImpl vo = (JxjhglXsjbxxVoImpl)dc.getViewObject();
            vo.setNamedWhereClauseParam("p_kkxn", kkxn);
            vo.setNamedWhereClauseParam("p_jxbh", jxbh);
            vo.executeQuery();
            log.info("====== sql！！！ ======"+vo.getQuery());
            log.info("====== 过滤筛选学生 ======");
        } catch (Exception e) {
            Noty.error(ErrorStringKey.OPERATOR_ERROR);
        }
    }
	
  自定义查询，遍历
  DCIteratorBinding dc =
      ADFUtils.findIterator("JcglJcckbView1Iterator"); //页面绑定迭代器
  JcglJcckbViewImpl jcVo =
      (JcglJcckbViewImpl)dc.getViewObject();
  jcVo.setWhereClause("bjh =:p_bjh");
  jcVo.defineNamedWhereClauseParam("p_bjh", null, null);
  jcVo.setNamedWhereClauseParam("p_bjh", bjh);
  jcVo.executeQuery(); //查询
  jcVo.setWhereClauseParams(null); //删除定义的绑定变量


  JgglZdjcxxHzImpl bjjcsymxVo =
      (JgglZdjcxxHzImpl)ADFUtils.findIterator("JgglZdjcxxHz1Iterator").getViewObject();
  bjjcsymxVo.executeQuery();
  //遍历方式1
  log.warning("====== sql: " + bjjcsymxVo.getQuery());
  bjjcsymxVo.setRangeSize(-1);
  Row[] rows = bjjcsymxVo.getAllRowsInRange();
  log.warning("====== 班级教材使用明细: " + rows.length);
  for (oracle.jbo.Row row : rows) {
      log.warning("====== 班级教材使用明细,课程名称: " +
                  row.getAttribute("Kcmc"));
  }
  //遍历方式2
  RowSetIterator rsi = bjjcsymxVo.createRowSetIterator(null);
  oracle.jbo.Row row = null;
  while (rsi.hasNext()) {
      row = rsi.next();
      log.warning("====== 班级教材使用明细,课程名称: " +
                  row.getAttribute("Kcmc"));
  }
  rsi.closeRowSetIterator();
  
        Map<String, String> cellValues = new HashMap();
        BysxxVoRowImpl bysxxRow = (BysxxVoRowImpl)row;
        //学生信息
        RowIterator xjkvo = bysxxRow.getGxhXjk();
        while (xjkvo.hasNext()) {
            Row xjkRow = xjkvo.next();
            for (String attrName : xjkRow.getAttributeNames()) {
                cellValues.put(attrName,
                               String.valueOf(xjkRow.getAttribute(attrName)));

            }
        }

5、关闭弹窗：addXsPop.hide();//addXsPop 为组件的绑定值：<af:popup id="addxsPop" binding="#{jxjhJxrwBean.addXsPop}" />

6、获取表达式的值：String value = JSFUtils.resolveExpressionAsString("#{pageFlowScope.yhxm}"); //角色名称
				   String value = (String)JSFUtils.getElExpression("#{sessionScope.jwxtUser.yhzh}");
				   
7、设置表达式的值，这种方式比表达式方式好
  ADFContext aDFContext = ADFContext.getCurrent();
  Map attrMap=aDFContext.getPageFlowScope();
  attrMap.put("jxbh", row.getAttribute("Jxbh"));

7、获取当前行绑定变量的值：String p_dqxkxq = (String)ADFUtils.getBoundAttributeValue("Kckkxq");//Kckkxq需要在对应页面中有绑定
  
8、绑定变量的使用：value="#{bindings.Truesxrs.inputValue}"，在页面绑定对应的属性

9、查看sql打印日志：xsVo.getQuery()

10、判空处理：CollectionUtils.isEmpty(cdList) && cdList.size() == 0

11、actionListener中获取组件id名称，【String id = actionEvent.getComponent().getId();】

12、获取所有属性值：【row.getAttributeNames()】

13、获取当前行：
            ViewObjectImpl jcckbVo =
                (ViewObjectImpl)ADFUtils.findIterator("JcglBjJczdxxVo1Iterator").getViewObject();
            Row jcRow = jcckbVo.getCurrentRow();
            String bjh = bjh = (String)jcRow.getAttribute("Bjdm");
	
it.insertRow(newrow);

15、获取组件id：【String id = actionEvent.getComponent().getId();】，在监听动作时使用，actionListener="#{CbsxxBean.showPopupListener}"

16、主键使用序列自动增长，【(new oracle.jbo.server.SequenceImpl("EMPLOYEES_SEQ",adf.object.getDBTransaction())).getSequenceNumber()】
(new oracle.jbo.server.SequenceImpl("CBSXX_SEQ",adf.object.getDBTransaction())).getSequenceNumber()

17、删除一行：r.remove();

18、动态sql查询
        XscjVoImpl xscjVoImpl =
            (XscjVoImpl)ADFUtils.findIterator("XscjVo1Iterator").getViewObject();
        StringBuilder builder = new StringBuilder();
        builder.append("Xh=:v_xh");
        if (((Boolean)bhwtgkcVal).booleanValue()) {
            builder.append(" and  (nvl(cj,0)>nvl(CJJGX,60) or nvl(bkcj,0)>nvl(CJJGX,60) or nvl(cxcj,0)>nvl(CJJGX,60) ) ");
        }
        if (((Boolean)bhrxkVal).booleanValue()) {
            //去掉不及格的任选课
            builder.append(" and ((nvl(cj,0)>nvl(CJJGX,60) or nvl(bkcj,0)>nvl(CJJGX,60) or nvl(cxcj,0)>nvl(CJJGX,60) ) or KCXZ<>3)");
        }
        if (((Boolean)bhlfVal).booleanValue()) {
            //不含无成绩的选项去掉成绩为0的学生
            builder.append(" and ( nvl(cj,0)=0 and nvl(bkcj,0)=0  and nvl(cxcj,0)=0  )");
        }
        xscjVoImpl.setWhereClause(builder.toString());
        xscjVoImpl.defineNamedWhereClauseParam("v_xh", null, null);
        xscjVoImpl.setNamedWhereClauseParam("v_xh", row.getAttribute("Xh"));
        xscjVoImpl.executeQuery();
        xscjVoImpl.setRangeSize(-1);
        Row[] allRow = xscjVoImpl.getAllRowsInRange();

19、获取AM中的方法：【 OperationBinding op = ADFUtils.findOperation("jcsfyjczPro");】
  【OperationBinding op =
      ADFUtils.findOperation(" "); //JcglServiceAMImpl
  if (op.isOperationEnabled()) {
      Map map = op.getParamsMap();
      map.put("jxbhList", jxbhList);
      map.put("jcbmList", isbnList);
      op.execute();
      if (op.getErrors().size() == 0) {
          String hhf = "<br>";
          retInfo = (String)op.getResult();
          //如果存在教学班已指定过某本教材，就弹出popup提示用户重新选择教学班及征订教材信息
          if (!"OK".equals(retInfo) && retInfo != null) {
              retInfo = retInfo.replace(".", hhf);
              retInfo =
                      retInfo + "<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;该门课已指定该教材，且已提交或者审核通过了，无需再次指定！";
              ADFContext.getCurrent().getPageFlowScope().put("err",
                                                             retInfo);
              RichPopup alPop =
                  (RichPopup)JSFUtils.findComponentInRoot("alPop");
              //弹出提示框
              JSFUtils.showPopup(alPop);
              return;
          }
      }
  }】
				
20、执行存储过程
    public String jcsfyjczPro(List jxbhList, List isbnList) {
        java.sql.CallableStatement st = null;
        Connection conn = null;
        String stmt = "BEGIN LY_JCGL.LY_JCGL_PAC_JCSFYJCZ(?,?,?,?,?); END;";
        String returnString = null;
        String jcsfyjczStr = "0";
        String yczjcxxStr = null;
        try {
            st = this.getDBTransaction().createCallableStatement(stmt, 0);
            conn = this.getDBTransaction().createStatement(1).getConnection();

            ArrayDescriptor arrayDesc =
                ArrayDescriptor.createDescriptor("TYPE_VARCHAR", conn);
            ARRAY jxbhArray = new ARRAY(arrayDesc, conn, jxbhList.toArray());
            ARRAY jcmcArray = new ARRAY(arrayDesc, conn, isbnList.toArray());

            st.setArray(1, jxbhArray);
            st.setArray(2, jcmcArray);
            st.registerOutParameter(3, Types.VARCHAR);
            st.registerOutParameter(4, Types.VARCHAR);
            st.registerOutParameter(5, Types.VARCHAR);
            st.executeUpdate(); //执行

            //返回消息
            jcsfyjczStr = st.getString(3);
            yczjcxxStr = st.getString(4);
            returnString = st.getString(5);
            if ("1".equals(jcsfyjczStr)) {//教材是否已经重新指定
                returnString = yczjcxxStr;
            }
            log.info("====== jcsfyjczStr：【" + jcsfyjczStr + "】,yczjcxxStr：【" +
                     yczjcxxStr + "】,returnString：【" + returnString+"】");

        } catch (java.sql.SQLException s) {
            this.getDBTransaction().rollback();
            s.printStackTrace();
            log.info("====== 判断是否存在指定过的教材再次进行指定失败！" + s.getMessage());
            throw new oracle.jbo.JboException(s);
        } finally {
            try {
                if (st != null) {
                    st.close();
                }
            } catch (java.sql.SQLException s2) {
                throw new oracle.jbo.JboException(s2);
            }
        }
        return returnString;
    }


  StringBuilder builder = new StringBuilder();
     builder.append("CKDH in (SELECT COLUMN_VALUE FROM TABLE(:V_CKDHS))");
     System.out.println("出库单号:"+Arrays.toString(ckdhArray));
  Array ssbmArr = new Array(ckdhArray) ;
  Map ssbmContext = new HashMap();
  ssbmContext.put(DomainContext.ELEMENT_SQL_NAME,
                            "TYPE_VARCHAR");
  ssbmContext.put(DomainContext.ELEMENT_TYPE, String.class);
  ssbmArr.setContext(null, null, ssbmContext);
  ckmxbVo1.setWhereClause(null);
  ckmxbVo1.setWhereClauseParams(null); //删除定义的绑定变量
  ckmxbVo1.setWhereClause(builder.toString());
  ckmxbVo1.defineNamedWhereClauseParam("V_CKDHS", null, null);
  ckmxbVo1.setNamedWhereClauseParam("V_CKDHS",ssbmArr);         
  ckmxbVo1.executeQuery();
  ckmxbVo1.setRangeSize(-1);
			
zdjcxxTable.getSelectedRowKeys().removeAll();//??	

获取页面下拉框的值：
  <af:popup id="p1" contentDelivery="lazyUncached" childCreation="deferred"
            binding="#{jcfyysBean.njPop}">
    <af:dialog contentWidth="150" id="d1" title="选择年级"
               dialogListener="#{jcfyysBean.generate}">
      <!--年级，可多选  -->
      <af:selectManyChoice required="true" inlineStyle="color:red"
                           value="#{bindings.XtglNjLov1.inputValue}"
                           label="年级" id="smc1"
                           binding="#{jcfyysBean.njManyBind}">
        <f:selectItems value="#{bindings.XtglNjLov1.items}" id="si1"/>
      </af:selectManyChoice>
      <!-- 学年-->
      <af:selectOneChoice value="#{bindings.XnLov1.inputValue}" label="学年"
                          required="#{bindings.XnLov1.hints.mandatory}"
                          shortDesc="#{bindings.XnLov1.hints.tooltip}"
                          id="soc4">
        <f:selectItems value="#{bindings.XnLov1.items}" id="si4"/>
      </af:selectOneChoice>
    </af:dialog>
  </af:popup>
  String xn = (String)ADFUtils.getSelectListValueOne("XnLov1", "Xnzj"); //学年
  List gradeList = ADFUtils.getSelectListValueMany("XtglNjLov1", "Dm"); //年级

添加查询条件
   ViewObjectImpl zyvo =
       (ViewObjectImpl)ADFUtils.findIterator("JcglZdjcxxView1Iterator").getViewObject(); //通过迭代器获取vo
   zyvo.applyViewCriteria(null); //
   ViewCriteria zyvc = zyvo.createViewCriteria(); //通过vo创建一个vc
   zyvc.setName("tc"); //给vc起个名字
   ViewCriteriaRow zyvcr1 =
       zyvc.createViewCriteriaRow(); //创建一个查询条件
   ViewCriteriaItem zyvci1 =
       zyvcr1.ensureCriteriaItem("Jxbh"); //申明查询字段
   zyvci1.setOperator(JboCompOper.OPER_IN); //指定描述形式
   if (null != jxbhList) {
       for (int i = 0; i < jxbhList.size(); i++) {
           zyvci1.setValue(i, jxbhList.get(i));
       }
   }
   zyvc.addElement(zyvcr1); //将查询
   zyvo.applyViewCriteria(zyvc);
   zyvo.setRangeSize(-1);
   zyvo.executeQuery();
   Row[] row = zyvo.getAllRowsInRange();
   zyvo.removeViewCriteria("tc");
   zyvo.reset();
   List zdjcxxzjList = new ArrayList();
   for (int i = 0; i < row.length; i++) {
       zdjcxxzjList.add(row[i].getAttribute("Zdjcxxzj"));
   }

获取AM
  DCIteratorBinding dc = ADFUtils.findIterator("xxxView1Iterator"); //页面绑定迭代器
  ViewObjectImpl rwVo = (ViewObjectImpl)dc.getViewObject();
  JcglServiceAMImpl jcglAm = (JcglServiceAMImpl)rwVo.getApplicationModule();
  String tbzdsjRet = jcglAm.tbzdsj(jxbhList);
  if (!"OK".equals(tbzdsjRet)) {
      JSFUtils.addFacesInformationMessage("征订数据同步失败！");
  }

====== 页面 ======

1、总行数
  <f:facet name="statusbar">
      <af:toolbar id="t28">
        <af:outputText value="#{common.total}" id="ot73"/>
        <af:outputText value="#{bindings.Jxjhgl_CxxsxxVo1.estimatedRowCount}"
                       id="ot74"
                       inlineStyle="color:Red; font-weight:800;"
                       partialTriggers="::qryId4"/>
        <af:outputText value="#{common.records}" id="ot75"/>
      </af:toolbar>
   </f:facet>
   
2、查询条件：【rendered="#{pageFlowScope.willDo eq 'cxzdjc' ? true : false}"】，是否显示

3、页面传递参数到后台：
  <af:commandLink text="#{row.Truesxrs}" id="cl1"
                  rendered="#{row.Shzt eq '9'}"
                  actionListener="#{jxjhJxrwBean.toEditJxbMdAction}">
    <af:clientAttribute name="jxbh"
                        value="#{row.bindings.Jxbh.inputValue}"/>
    <af:showPopupBehavior popupId=":::addxsPop" triggerType="action"/>
    <af:clientAttribute/>
  </af:commandLink>
  
4、查询条件排序在vo.xml UI Categories中拖动排序。

5、弹框自定义提示：
  <af:popup id="p3" contentDelivery="lazyUncached" autoCancel="disabled"
            binding="#{viewScope.jclyBean.popup3}">
    <af:dialog id="d3" title="提示" type="ok">
      <af:outputText value="outputText3" id="ot5" binding="#{viewScope.jclyBean.outputTest3}" escape="false"/>
    </af:dialog>
  </af:popup>
  
6、文本输入框：
  <af:panelBox text="休学、复学日期及原因" id="pb6">
    <af:inputText value="#{bindings.Xjydxq.inputValue}"
                  required="#{bindings.Xjydxq.hints.mandatory}"
                  maximumLength="#{bindings.Xjydxq.hints.precision}"
                  shortDesc="#{bindings.Xjydxq.hints.tooltip}"
                  id="it20" rows="3" columns="100">
      <f:validator binding="#{bindings.Xjydxq.validator}"/>
    </af:inputText>
  </af:panelBox>
  
7、框架自带导出:【 table的id exportedId="resId1" 】
 <af:commandToolbarButton text="导出明细" id="ctb1" >
    <af:exportCollectionActionListener type="excelHTML"
      exportedId="resId1" 
	  filename="征订教材信息明细.xls" 
	  title="征订教材信息明细"/>
 </af:commandToolbarButton>
  自定义导出：	  
 <af:commandToolbarButton text="导出明细" id="ctb1">
    <af:fileDownloadActionListener contentType="text/html; charset=utf-8"
      filename="征订教材信息明细.xls" 
	  method="#{zdjcxxBean.printZdjcxxXsLsByExcel}"/>
  </af:commandToolbarButton>
  
8、输入框值变化监听 【 valueChangeListener="#{viewScope.JcrkBean.slChangeListener}" 】
<!--入库数量 -->
          <af:column sortProperty="#{bindings.JcglRkmxbView2.hints.Sl.name}"
                     sortable="true"
                     headerText="#{bindings.JcglRkmxbView2.hints.Sl.label}"
                     id="c8" width="105">
            <af:inputNumberSpinbox value="#{row.bindings.Sl.inputValue}"
                                   label="#{bindings.JcglRkmxbView2.hints.Sl.label}"
                                   required="#{bindings.JcglRkmxbView2.hints.Sl.mandatory}"
                                   columns="10"
                                   readOnly="#{pageFlowScope.Rkzt eq '0'?false:true}"
                                   shortDesc="#{bindings.JcglRkmxbView2.hints.Sl.tooltip}"
                                   id="it6"
                                   valueChangeListener="#{viewScope.JcrkBean.slChangeListener}"
                                   minimum="1" autoSubmit="true">
              <f:validator binding="#{row.bindings.Sl.validator}"/>
              <af:convertNumber groupingUsed="false"
                                pattern="#{bindings.JcglRkmxbView2.hints.Sl.format}"/>
            </af:inputNumberSpinbox>
          </af:column>
  
成功提示信息：
  Noty.success(ErrorStringKey.COMMMIT_SCUUESS);
  Noty.success("操作成功");
  Noty.error("文件类型不对，请选择Excel文件进行导入!");
  Noty.info("请选择上传文件!");

多选，教师领用
        <af:selectManyChoice value="#{viewScope.jclyBean.jsDwValue}" label="单位"
                             id="smc5">
          <f:selectItems value="#{bindings.XtglDwLov2.items}" id="si5"/>
        </af:selectManyChoice>
  
多行错误提示：
  JSFUtils.addFacesInformationMessage("第" + rowIndex +  "行的《" + colName + "》有误，请检查！当前值：" +  colValue);
  
  <!--审批弹框提示 TODO -->
  <af:popup id="approvalPop" childCreation="deferred"
            contentDelivery="lazyUncached">
    <af:dialog id="gbktabd1" affirmativeTextAndAccessKey="#{common.ok}"
               cancelTextAndAccessKey="#{common.cancel}" title="提示"
               contentHeight="100" contentWidth="200"
               dialogListener="#{viewScope.xgxjBean.confimApprovalAction}">
      <!--<af:outputText value="审核后将不可进行修改，请认真确认后再进行提交!" id="ot37"/>-->
    </af:dialog>
  </af:popup>

  
  
======   ======
C:\Oracle\Middleware
C:\Users\admin\AppData\Roaming\JDeveloper