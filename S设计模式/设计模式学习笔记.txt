
原则理念：不要为了套用设计模式而使用设计模式，而是在业务上遇到困难时自然而然地想到设计模式，做为一种解决问题的方案。

====== 创建型5设计模式 ======

1、简单工厂模式：定义一个创建对象的接口，但让实现这个接口类来决定实例化哪个类，工厂方法让类的实例化过程推迟到类中进行。
  1)、创建对象需要大量重复代码。
  2)、客户端(应用层)不依赖于产品类实例如何被创建、实现等细节。
  3)、一个通过其子类来指定创建哪个对象。
  4)、用户只关心所需产品对应的工厂，无需关心创建细节。
  5)、加入新产品符合开闭原则，提高系统的可扩展性。
  6)、类的个数容易过多，增加了代码结构复杂度。
  7)、增加系统的抽象性和理解难度。
  
2、抽象工厂模式：指提供一个创建一系列相关或相互依赖对象的接口，无须指定他们具体的类。
  1)、具体产品在应用层代码隔离，无需关心创建细节。
  2)、将一个系列的产品族统一到一起创建。
  3)、规定了所有可能被创建的产品集合，产品族中扩展新的产品困难，需要修改抽象工厂接口。
  4)、增加系统的抽象性和理解难度。
  
3、单例模式：指确保一个类在任何情况下都绝对只有一个实例，并提供一个全局访问点
  线程模式打断点
  
  
  
  
  
  
  
  
  