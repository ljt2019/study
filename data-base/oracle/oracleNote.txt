
1、Oracle数据库：默认端口号【1521】，默认oracle实例(SID)【orcl】,有些是【xe】
  1)、概念：相关的操作系统文件（即存储在计算机硬盘上的文件）集合，这些文件组织在一起，成为一个逻辑整体，即Oracle数据库，必须与内存中的实例结合才能对外提供数据管理服务。

  2)、三个必须文件：
  
    (1)、Data files：数据的存储仓库
    (2)、Controller files：记录数据库的名字、存储位置等基本信息，很小的二进制文件，自动生成
    (3)、Redo Log files：重做日志文件，例如数据恢复
	
  3)、三个非必需文件：
    (1)、Parameter file：参数文件
    (2)、Password file：口令文件
    (3)、Archived Log files
	
2、oracle实例：位于物理内存里的数据结构，它由操作系统的多个后台进程和一个共享的内存池组成，共享的内存池可以被所有进程访问


====== oracle的7个服务 ======

1、OracleServiceORCL：数据库基础服务，必须启动

2、OracleOraDb11g_home1TNSListener：数据库监听服务，远程访问，使用sqldeveloper，需要打开此服务（建议为启动），非必须启动

3、OracleJobSchedulerORCL：Oracle调用定时器服务，非必须启动

4、OracleMTSRecoveryService：服务端控制服务

5、OracleOraDb11g_home1ClrAgent：oracle数据 .net扩展的一部分，非必须启动

6、OracleDBConsoleorcl:基于web的控制台服务，在web端管理oracle时需要启动，非必需启动项

7、OracleVssWriterORCL:拷贝写入服务，非必需启动项

	
====== Oracle中常用的SQL Plus 命令 ======

  1)、切换用户：【connect username/password】
  
  2)、执行系统doc命令：【host <doc命令>】，例如：host mkdir c:\AAAAA\oracleTest
  
  3)、导出记录到本地：【spool】，例如:1、【spool c:\AAAAA\oracleTest】2、【select * from book】3、【spool off】
  
  4)、清屏：【clear screen】
 
  5)、执行SQL脚本语句：【sart c:\AAAAA\oracleTest\test.sql】【@c:\AAAAA\oracleTest\test.sql】
  
  6)、显示表结构：【desc】
  
  7)、显示错误信息：【show error】
  
  8)、退出：【exit】
  
  
====== 表空间 ======
	
1、什么是表空间：表空间实际上是数据库上的逻辑存储结构，可以把表空间理解为在数据库中开辟一个空间，用于存放我们的数据库对象，一个数据库可以由一个或多个表空间构成；一个表空间由一个或多个数据文件构成。
	
2、分类

  1)、永久表空间：系统的表空间，存储数据字典：统计信息、表信息、索引信息、用户信息等
  
  2)、临时表空间：必须存在的一个表空间，数据中专站，当commit后会被清空，数据存储到了永久表空间中
  
  3)、UNDO表空间：commit后想回退，则数据就是存储在这个空间里边

2、创建表空间：在sys/system用户下操作

  1)、永久：【create tablespace 表空间名 datafile '=xx.dbf' size 10m;】
  
  2)、临时：【create temporary tablespace 表空间名 tempfile 'xx.dbf' size 10m;】
  
3、查看所创建的表空间的存放位置：大写

	1)、永久：【select file_name from dba_data_files where tablespace_name = 'TEST1_TABLESPACE';】
	
	2)、临时：【select file_name from dba_temp_files where tablespace_name = 'TEMPTEST_TABLESPACE';】

4、查看用户表空间：【select tablespace_name from dba_tablespaces/user_tablespaces;】，分别是用户表空间和系统表空间

5、更改用户默认表空和临时表空间：【 alter user 用户名 default tablespace 表空间名 temporary tablespace 临时表空间名;】
	
6、设置表空间联机（即是可读写状态）或脱机的状态：【alter tablespace 表空间名 online/offline;】
	查看表空间的状态：【select status from dba_tablespaces where tablespace_name = '表空间名';】

7、设置只读或可读写状态(默认是可读写状态)：【alter tablespace 表空间名 read only/read write】

8、在表空间中增加数据文件：【alter tablespace 表空间名 add datafile '数据文件名.dbf' size 10m;】

9、删除表空间中的数据文件：【alter tablespace 表空间名 drop datafile '数据文件名.dbf';】
	注意：不能删除第一个创建的数据文件，如需删除，则要把表空间删除
	
10、删除表空间：【drop tablespace 表空间名 [including contents];】
	注意：如何想同时把表空间中的数据文件也连同删除，则需加后边的可选项


====== 用户管理 ======

1、sys：超级用户，可以完成数据库得所有管理任务，以sysdb或asysoper的权限登陆，【conn sys/123456 @orcl as sysdba;】

2、system：用来创建一些用于查看管理信息得表或试图，以普通用户(normal)的权限登陆，【conn scott/123456 @orcl as normal;】

3、sysman：

4、scott：示例用户，用来初学者学习

5、查看所有用户：【select username from dba_users;】,针对管理员的数据字典

6、查看当前账户下的所有表信息:【select table_name from user_tables;】，针对普通用户的数据字典，查看当前连接用户的用户信息

7、解锁用户：【alter user 用户名 identified by 用户密码(自定义指定) account unlock;】；锁定某用户：【alter user 用户名 account lock;】

8、更改用户密码：【alter user 用户名 identified by 新密码;】

9、创建用户(指定表空间和临时表空间，不然会默认为系统的表空间[USERS/TEMP])：

	【create user 用户名 identified by 密码 default tablespace 表空间名 temporary tablespace 临时表空间名;】

	例如：【create user linjt identified by 123456 default tablespace test_tablespace temporary tablespace temptest_tablespace;】

10、删除用户：【drop user 用户名 cascade;】，加上cascade表示级联将用户连接以及其所创建的东西全部删除

11、连接切换用户：【connect username/password】


====== 角色管理 ======

1、什么事角色：即一组权限的集合；用户可以给角色赋予指定的权限，然后将角色赋给相应的用户。
	
2、三种系统的标准的角色：

	1)、CONNECT(连接角色)：只可以登陆Oracle，不可以创建实体和数据库结构
	
	2)、RESOURCE(资源角色)：可以创建实体（表、视图...），但不可以创建数据库结构
	
	3)、DBA(数据管理员角色)：系统最高权限，只有DBA才可以创建数据库结构
	
3、创建角色：【create role 角色名;】，例如：【create role manager;】；删除角色：【drop role 角色名;】例如：【drop role manager;】
	
4、对于普通用户授予connect和resource权限，DBA授予dba权限

5、给用户赋予角色：【grant 角色 to 用户名1,用户2】 例如：【grant connect to linjt;】

6、收回用户角色：【revoke 角色 from 用户名1,用户2】 例如：【revoke connect from linjt;】


====== 权限管理 ======

1、什么是权限：指执行特定命令或访问数据库对象的权利。

2、权限的作用：数据库安全性(系统安全、数据安全)

3、权限的分类：

  1)、系统权限：允许用户执行特定的数据库动作，如创建表、创建索引、连接实例等；
  
    (1)、查看系统权限：【select * from system_privilege_map;】
	
    (2)、授予系统权限的语法格式：【grant privilege [,privilege...] to user [,user|role,public...]】
	     例如：【grant create table,create view to manager;】
		 
	(3)、回收格式：【revoke {privilege|role} from {user|role|public}】
         例如：【revoke create table,create sequence from manager;】
	
  2)、对象(实体)权限：允许用户操作一些特定的对象，如读取视图、表，可更新某些列、执行存储过程等(select、update、insert、delete、all)
    
	(1)、所有的对象权限：【select * from table_privilege_map;】
	
	(2)、授予对象权限的语法格式：【grant object_priv | all [(columns)] on object to {user|role|public}】
         例如：【grant select,update,insert on scott.emp to manager2】
               【grant manager2 to user01】
			   
	(3)、回收格式：【revoke {privilege[,privilege...]|all} on object from {user[,user...]|role|public}】
	     例如：【revoke all on scott.emp from user01】


====== DML ======


	
====== DDL ======

1、create table：创建数据库表

2、create index：创建数据库索引

3、drop table：删除数据库表

4、drop index：删除数据库索引  

5、truncate：删除表中的所有行

6、alter table：更改表的结构，增加、修改、删除列 ：【alter table student modify id varchar(32);】

7、alter table add constraint:在已有的表上增加约束
   
   
====== DCL ======

1、grant：将权限或角色授予用户或其他角色（授予访问权限）

2、revoke：从用户或数据库角色回收权限（撤销访问权限）

3、lock：对数据库特定部分进行锁定

4、unlock：解锁数据库，使用管理者system身份登录：【alter user hr identified by hr(默认密码为hr) account unlock;】
	
	
====== TCL ======

1、commit：提交事务处理
2、rellback：回滚
3、savepoint：设置保存点


====== Oracle中常见的数据类型 ======

1、字符类型：

	1)、char：表示固定长度类型，列长度在1到200个字节之间
	
	2)、varchar2：表示可变长度字符串，最大长度为4000字节
	
2、数值类型：number[(p[,s])]
	
	1)、p表示精度，s表示小数点位数，可以存储整数、浮点数等数值类型，最高精度为38位
	
	2)、例如：number(5,0):表示最多存储5位整数
		例如：number(5,2):表示可存储999.99的浮点数

3、日期类型：主要存储日期和时间值 ，包括年月日时分秒，主要的日期类型是 date

4、LOB类型：

	1)、clob：字符lob，可以存储大量的字符数据
	
	2)、blob二进制lob，可以存储较大的二进制对象，如图形、视频剪辑、声音文件等
	
	
====== select ======

1、定义列别名
  列别名具有以下特征和用途：
  • 可重命名列标题
  • 有助于计算
  • 紧跟在列名后（列名和别名之间也可以加上可选
  关键字 AS）
  • 如果别名包含空格或特殊字符，或者区分大小写，
  则需要使用双引号
  
2、连接运算符：select last_name,job_id, last_name || ' is a '|| job_id as "Employees" from employees;
  连接运算符具有以下特征和用途：
  • 将列或字符串链接到其它列
  • 由两条竖线 (||) 表示
  • 创建一个由字符表达式生成的列

3、文字字符串
  • 文字是指 SELECT 语句中包含的字符、数字或日期。
  • 日期和字符文字值必须放在单引号内。
  • 每个字符串在每个返回行中输出一次。

4、其它引号 (q) 运算符：可以添加特殊字符
  • 指定您自己的引号分隔符。
  • 选择任一分隔符。
  • 提高可读性和易用性。

5、比较运算符
  <> 不等于，与mysql中有所区别【!=】
  IS NULL 为空值

6、使用 LIKE 运算符执行模式匹配
  • 使用 LIKE 运算符可执行通配符搜索，查找有效搜索
  字符串值。
  • 搜索条件可包含文字字符或数字：
  % 表示零个或多个字符。
  _ 表示一个字符。

7、替代变量
  • 使用替代变量：
  – 使用单与号 (&) 及双与号 (&&) 替代变量可临时存储值
  • 可将替代变量作为以下项的补充：
  – WHERE 条件
  – ORDER BY 子句
  – 列表达式
  – 表名
  – 整个 SELECT 语句
  使用替代变量指定数值：【SELECT * FROM employees WHERE employee_id = &employee_num;】
  使用替代变量指定字符值和日期值：【SELECT * FROM employees WHERE job_id = '&job_title';】
  指定列名、表达式和文本：【SELECT employee_id, last_name, job_id,&column_name FROM employees WHERE &condition ORDER BY &order_column;】
  使用双与号替代变量,双与号 (&&)可以将变量保存起来，而不必每次都输入

8、使用 DEFINE 命令
  创建变量：【DEFINE employee_num = 200;】
  删除变量：【UNDEFINE employee_num;】

9、使用 VERIFY 命令

10、SQL函数
  单行函数：
  • 处理数据项
  • 接受参数并返回一个值
  • 对每个返回行进行处理
  • 为每行返回一个结果
  • 可能会修改数据类型
  • 可以嵌套
  • 接受参数，这些参数可以是列或表达式

11、大小写转换函数
  LOWER('SQL Course') sql course
  UPPER('SQL Course') SQL COURSE
  INITCAP('SQL Course') Sql Course

12、字符处理函数
  CONCAT('Hello', 'World') HelloWorld
  SUBSTR('HelloWorld',1,5) Hello
  LENGTH('HelloWorld') 10 
  INSTR('HelloWorld', 'W') 6
  LPAD(salary,10,'*') *****24000
  RPAD(salary, 10, '*') 24000***** 
  REPLACE ('JACK and JUE','J','BL') BLACK and BLUE 
  TRIM('H' FROM 'HelloWorld') elloWorld

13、数字函数,DUAL 是可用于查看函数和计算结果的公用表。
  • ROUND：将值舍入到指定的小数位【select ROUND(45.926, 2) from DUAL --> 45.93】
  • TRUNC：将值截断到指定的小数位【select TRUNC(45.926, 2) from DUAL --> 45.92】
  • MOD：返回除法运算的余数【select MOD(1600, 300) from DUAL --> 100】

14、处理日期，默认的日期显示格式为 DD-MON-RR
  MONTHS_BETWEEN 两个日期之间的月数，计算工作年数和月数：【SELECT hire_date,trunc(months_between(SYSDATE,hire_date)/12) FROM employees;】

P148



====== sqldeveloper工具的使用 ======

1、美化sql：【Ctrl+A选择sql语句 --> Ctrl+F7】




































