
127.0.0.1:8080/api/devMgmt/gym/getlist

参数都是以dto的形式传送

--- controller层 ---

1、查询结果返回值为object/其他返回AppResultObj
 
2、错误信息返回：AppResultObj.parameterError("id不能为空");

3、查找数据成功【不分页】：AppResultObj.success(gymInDTO);
               【需分页】：AppPageResultObj.success(outDTOList, pageParameter); 

4、查询数据失败：AppResultObj.cannotFindData();

5、异常返回：AppResultObj.serverError(e.getMessage());
             AppPageResultObj.serverError("查询失败");

6、请求参数示例：required = false 时，参数不是必须传
public Object getGymById(@RequestBody(required = false) GymInDTO parameter) {}

7、日志：logger.error(e.getMessage());
         logger.info(e.getMessage());
	 logger.debug("调试信息");

8、分页信息：
  写法1：
  PageParameter pageParameter = new PageParameter(
        		parameter.getCurrentPage() == null ? 0 : parameter.getCurrentPage(),
        		parameter.getPageSize()== null ? 20 : parameter.getPageSize());

  写法2：
  int page = parameter.getCurrentPage() != null ? parameter.getCurrentPage() : 0;
  int count = parameter.getPageSize() != null ? parameter.getPageSize() : 20;
  PageParameter pageParameter = new PageParameter(page, count);

  写法3：
  PageParameter pageParameter = null;
		if (parameter != null && parameter.getPage() != null && parameter.getCount() != null) {
			pageParameter = new PageParameter(parameter.getPage(), parameter.getCount());
		}

9、设置场馆类型：parameter.setType(GymTypeEnum.SPORT.getCode());

10、新增和修改需要检验：
public AppResultObj addGym(@Validated(AddGroup.class) @RequestBody GymInDTO param) {}

11、参数检验写法：
AppResultObj verifyResult = verifyInput(param);
            if (verifyResult != null) {
                return verifyResult;
            }

12、参数检验：

13、调用关系：
    controller --> Service --> Example【是一个接口，直接调用对应的方法返回dto或者json】 --> 

14、需要用到的类
