
三种方法其实是一种方式，写法不同。

方式 1：
	@Override
    public Boolean isSameName(String id, String name) {
        Boolean isSameName = false;
        if (StringUtils.isBlank(id)) {
            List<Symptom> list = this.query(Query.newQuery().where(Symptom_.name.equal(name), Query.and, Symptom_.deleteFlag.equal(CommonConstant.NOT_DELETE)), null);
            if (CollectionUtils.isNotEmpty(list)) {
                isSameName = true;
            }
        } else {
            List<Symptom> list = this.query(Query.newQuery().where(Symptom_.name.equal(name), Query.and, Symptom_.deleteFlag.equal(CommonConstant.NOT_DELETE), Query.and, Symptom_.id.notEqual(id)), null);
            if (CollectionUtils.isNotEmpty(list)) {
                isSameName = true;
            }
        }
        return isSameName;
    }
	
	
方式 2：
	PreHealthCareExample example = new PreHealthCareExample ();
	PreHealthCareExample.Criteria criteria = example.createCriteria ()
				.andNameEqualTo ( name )
				.andDeleteFlagEqualTo ( CommonConstant.NOT_DELETE );
	if ( StringUtils.isNotBlank ( id ) ){
		criteria.andIdNotEqualTo ( id );
	}
	List < PreHealthCare > healthCareList = this.selectByExample ( example );
	if ( healthCareList.size () > 0 ){
		return AppResultObj.parameterError ( "名称已存在" );
	}

	PreQuestionResultExample example = new PreQuestionResultExample ();
	PreQuestionResultExample.Criteria criteria = example.createCriteria ()
				.andNameEqualTo ( param.getName() )
				.andDeleteFlagEqualTo ( CommonConstant.NOT_DELETE );
	if ( StringUtils.isNotBlank ( param.getId() ) ){
		criteria.andIdNotEqualTo ( param.getId() );
	}
	List < PreQuestionResult > healthCareList = preQuestionResultService.selectByExample ( example );
	if ( healthCareList.size () > 0 ){
		return AppResultObj.parameterError ( "名称已存在" );
	}
	
	
方式 3：	
	private AppResultObj checkName(GymInDTO param) {
		String id = param.getId();
		String name = param.getName();
		CriteriaList criteriaList = new CriteriaList();
		// id不为空则为修改
		if (StringUtils.isNotEmpty(id)) {
			criteriaList.and(Gym_.id.notEqual(id));
		}
		criteriaList.and(Gym_.name.equal(name));
		criteriaList.and(Gym_.deleteFlag.equal(CommonConstant.NOT_DELETE));
		Query query = new Query().where(criteriaList.getData());
		List<Gym> gymList = gymService.query(query, null);
		if (!gymList.isEmpty()) {
			return AppResultObj.parameterError("场馆名称重复");
		}
		return null;
	}
	
	