
====== 二分查找(折半查找) ======
  
  1)、考虑用有序数组作为索引的数据结构。
  
  2)、有序数组的等值查询和比较查询效率非常高，但是更新数据时可能要挪动大量的数据(index)，所以只适合存储静态的数据
  
  3)、为了支持频繁的修改，比如插入数据，我们需要采用链表。链表的话，如果是单链表，它的查找效率还是不够高。
  
  
====== 二叉查找树BST(Binary h Search Tree) BTREE ======

1、特点：左子树所有的节点都小于父节点，右子树所有的节点都大于父节点。投影到平面以后，就是一个有序的线性表。
   左子树节点 < 父节点
   右子树节点 > 父节点
   
2、二叉查找树既能够实现快速查找，又能够实现快速插入。

3、查找耗时是和树的深度相关，在最坏的情况下时间复杂度会退化成O(n)。

4、